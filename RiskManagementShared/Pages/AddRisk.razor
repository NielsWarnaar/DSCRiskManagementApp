@page "/AddRisk"

@inject CategoryService CategoryService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject RiskBean RiskBean
@using RiskManagementShared.Services;
@using RiskManagementShared.Models;
@using RiskManagementShared.Beans;

<PageTitle>Nieuw risico</PageTitle>

<h3>Voeg een nieuw risico toe</h3>

<EditForm Model="risk" OnValidSubmit="@Add">
    
    <div>
        <label>Naam risico</label>
        <InputText id="RiskName" @bind-Value="risk.RiskName"  />
    </div>

    <div>
        <label>Waarschijnlijkheid waarde inherent</label>
        <InputSelect id="riskValue" @bind-Value="risk.ProbabilityValueInherent">
            @{int i = 1;}
            @foreach (var number in RiskBean.riskProbability)
            {
                <option value=@i>@number</option>
                i++;
            }
        </InputSelect>
    </div>

    <div>
        <label>Waarschijnlijkheid waarde controlled</label>
        <InputSelect id="riskValue" @bind-Value="risk.ProbabilityValueControlled">
            @{
                int i = 1;
            }
            @foreach (var number in RiskBean.riskProbability)
            {
                <option value=@i>@number</option>
                i++;
            }
        </InputSelect>
    </div>

    <div>
        <label>Impact waarde inherent</label>
        <InputSelect id="riskValue" @bind-Value="risk.ImpactValueInherent">
            @{
                int i = 1;
            }
            @foreach (var number in RiskBean.riskImpact)
            {
                <option value=@i>@number</option>
                i++;
            }
        </InputSelect>
    </div>

    <div>
        <label>Impact waarde controlled</label>
        <InputSelect id="riskValue" @bind-Value="risk.ImpactValueControlled">
            @{
                int i = 1;
            }
            @foreach (var number in RiskBean.riskImpact)
            {
                <option value=@i>@number</option>
                i++;
            }
        </InputSelect>
    </div>

    <div>
        <label>Categorie</label>
        <InputSelect id="Categorie" @bind-Value="risk.CategoryId">
            @if (Categories == null)
            {
                <h4>Loading...</h4>
            }
            else
            {
                @foreach (var category in Categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            }
            </InputSelect>
    </div>

    <div>
        <label>Omschrijving</label>
        <InputText id="Description" @bind-Value="risk.Description" />
    </div>

    <div>
        <label>ActionType</label>
        <InputText id="ActionType" @bind-Value="risk.ActionType" />
    </div>

    <div>
        <label>Uitstaande acties</label>
        <InputText id="OutstandingActions" @bind-Value="risk.OutstandingActions" />
    </div>

    <div>
        <label>Classificatie</label>
        <InputText id="Classification" @bind-Value="risk.Classification" />
    </div>

    <div>
        <label>Vervaldatum</label>
        <InputDate id="DueDate" @bind-Value="risk.DueDate" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>


@code {
    private Risk risk = new Risk();
    private IEnumerable<Category>? Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await CategoryService.GetCategories();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        risk.DueDate = DateTime.Now;
    }

    private async void Add()
    {
        var response = await Http.PostAsJsonAsync<Risk>("/api/Risks", risk);
        response.EnsureSuccessStatusCode();
        NavigationManager.NavigateTo("/");
    }
}

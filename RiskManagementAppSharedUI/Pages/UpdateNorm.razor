@page "/UpdateNorm"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject NormBean NormBean
@inject NormService NormService
@inject RiskService RiskService
@using RiskManagementAppSharedUI.Models
@using RiskManagementAppSharedUI.Services
@using RiskManagementAppSharedUI.Beans
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]

<h3>UpdateNorm</h3>

@if (Norm == null)
{
    <h4>Loading...</h4>
}
else
{
    <EditForm Model="norm" OnValidSubmit="@Update">

        <div>
            <label>NormName</label>
            <InputText class="forn-control" id="NormName" @bind-Value="norm.NormName" placeholder="@Norm.NormName" />
        </div>

        <div>
            <label>NormDescription</label>
            <InputText class="forn-control" id="NormDescription" @bind-Value="norm.NormDescription" placeholder="@Norm.NormDescription" />
        </div>

        <div>
            <label>Risico</label>
            <InputSelect id="Risk" @bind-Value="norm.RiskId" placeholder="@norm.RiskId">
                @if (Risks == null)
                {
                    <h4>Loading...</h4>
                }
                else
                {
                    @foreach (var risk in Risks)
                    {
                        <option value="@risk.RiskId">@risk.RiskName</option>
                    }
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Update norm</button>

    </EditForm>
}

@code {
    private int NormId { get; set; }
    public Norm Norm { get; set; } = new();
    private Norm norm = new();
    private IEnumerable<Risk>? Risks { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        NormId = NormBean.GetNormId();
        norm.NormId = NormId;
    }

    protected override async Task OnInitializedAsync()
    {
        Norm = await NormService.GetNorm(NormId);
        Risks = await RiskService.GetRisks();
    }

    private async Task Update()
    {
        var response = await Http.PutAsJsonAsync($"api/Norms/{NormId}", norm);
        NavigationManager.NavigateTo("/Norms", true);
    }
}

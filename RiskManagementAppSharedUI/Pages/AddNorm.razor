@page "/AddNorm"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject RiskService RiskService
@using Microsoft.AspNetCore.Authorization;
@using RiskManagementAppSharedUI.Models;
@using RiskManagementAppSharedUI.Services;
@attribute [Authorize]

<PageTitle>Nieuwe norm</PageTitle>

<h3>Voeg een norm toe</h3>

<EditForm Model="norm" OnValidSubmit="@Add">

    <div>
        <label>Naam norm</label>
        <InputText id="NormName" @bind-Value="norm.NormName" />
    </div>

    <div>
        <label>Beschrijving norm</label>
        <InputText id="NormDescription" @bind-Value="norm.NormDescription" />
    </div>

    <div>
        <label>Risico</label>
        <InputSelect id="Risk" @bind-Value="norm.RiskId">
            @if (Risks == null)
            {
                <h4>Loading...</h4>
            }
            else
            {
                @foreach (var risk in Risks)
                {
                    <option value="@risk.RiskId">@risk.RiskName</option>
                }
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Voeg norm toe</button>

    </EditForm>

@code {
    private Norm norm = new();
    private IEnumerable<Risk> Risks { get; set; } = new List<Risk>();

    protected override async Task OnInitializedAsync()
    {
        Risks = await RiskService.GetRisks();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task Add()
    {
        var response = await Http.PostAsJsonAsync("api/Norms", norm);
        response.EnsureSuccessStatusCode();
        NavigationManager.NavigateTo("/Norms", true);
    }
}
